@page "/admin/orders"
@using Microsoft.EntityFrameworkCore;
@using SportsStore.Models;
@inherits OwningComponentBase<IOrderRepository>

<OrderTable TableTitle="Unshipped Orders" Orders="UnshippedOrders" ButtonLabel="Ship" OrderSelected="ShipOrder"></OrderTable>
<OrderTable TableTitle="Shipped Orders" Orders="ShippedOrders" ButtonLabel="Reset" OrderSelected="ResetOrder"></OrderTable>
<button class="btn btn-info" onclick="@(() => UpdateData())">Refresh Data</button>
@code
{
    public IOrderRepository Repository => Service;
    public IEnumerable<Order>? AllOrders { get; set; }
    public IEnumerable<Order>? UnshippedOrders { get; set; }
    public IEnumerable<Order>? ShippedOrders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnshippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true);
    public void ResetOrder(int id) => UpdateOrder(id, false);

    private void UpdateOrder(int orderId, bool shipValue)
    {
        Order? o = Repository.Orders.FirstOrDefault(o => o.OrderID == orderId);
        o.Shipped = shipValue;
        Repository.SaveOrder(o);
    }

}